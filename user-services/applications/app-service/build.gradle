apply plugin: 'org.springframework.boot'

dependencies {
	testImplementation 'org.springframework:spring-web'
	implementation project(':api-rest')
	implementation 'org.reactivecommons.utils:object-mapper:0.1.0'
	implementation project(':jpa-repository')
    // MÃ³dulos internos
    implementation project(':model')
    implementation project(':usecase')

    // Spring Boot MVC (imperativo)
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-crypto'

    // JDBC + PostgreSQL
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.postgresql:postgresql'

    // Liquibase
    implementation 'org.liquibase:liquibase-core'

    // Dev tools (hot reload)
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'

    // Lombok (si se usa en domain/usecase)
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    // Tests
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.tngtech.archunit:archunit:1.4.0'
    testImplementation 'com.fasterxml.jackson.core:jackson-databind'
}

tasks.register('explodedJar', Copy) {
    with jar
    into layout.buildDirectory.dir("exploded")
}

jar {
    // To disable the *-plain.jar
    enabled = false
}

bootJar {
    // Sets output jar name
    archiveFileName = "${project.getParent().getName()}.${archiveExtension.get()}"
}